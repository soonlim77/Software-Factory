using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using JustInTimeShippingCore;

namespace JustInTimeShippingForm
{
    public partial class JustInTimeShippingForm : Form
    {
        Address originAddress;
        Address destinationAddress;
        ShippingDetail detail;
        JustInTimeShippingFrontController controller = new JustInTimeShippingFrontController();

        public JustInTimeShippingForm()
        {
            InitializeComponent();
        }



        private void btnProcess_Click(object sender, EventArgs e)
        {

            originAddress = new Address(txtSender.Text.Trim(), 
                txtSenderStreet.Text.Trim(), 
                txtSenderCity.Text.Trim(), 
                cbSenderStates.SelectedItem.ToString(), 
                txtSenderPostal.Text.Trim());

            destinationAddress = new Address(txtReceipient.Text.Trim(),
                txtReceipientStreet.Text.Trim(),
                txtReceipientCity.Text.Trim(),
                cbReceipientStates.SelectedItem.ToString(),
                txtReceipientPostal.Text.Trim());

            detail = new ShippingDetail();
            detail.OriginAddress = originAddress;
            detail.DestinationAddress = destinationAddress;

            if (cbPackageType.SelectedItem.ToString().CompareTo("Box") == 0)
            {
                detail.PackageInfo = new PackageInfo(PackageTypeEnum.Box, 
                            Convert.ToInt32(numHeight.Value.ToString()), 
                            Convert.ToInt32(numWidth.Value.ToString()),
                            Convert.ToInt32(numDepth.Value.ToString()));
            }
            else 
            {
                detail.PackageInfo = new PackageInfo(PackageTypeEnum.Letter);
            }

            if (cbDeliveryType.SelectedItem.ToString().CompareTo("Air")==0)
            {
                detail.DeliveryType = DeliveryTypeEnum.Air;
            }
            if (cbDeliveryType.SelectedItem.ToString().CompareTo("Ground") == 0)
            {
                detail.DeliveryType = DeliveryTypeEnum.Ground;
            }
            

            MessageBox.Show(controller.Process(detail),string.Empty, MessageBoxButtons.OKCancel);
                    
        }

        private void txtSender_TextChanged(object sender, EventArgs e)
        {

        }

        private void groupBox2_Enter(object sender, EventArgs e)
        {

        }

        private void cbPackageType_SelectedIndexChanged(object sender, EventArgs e)
        {

            if (cbPackageType.SelectedItem.ToString() != null && cbPackageType.SelectedItem.ToString().CompareTo("Box") == 0)
            {
                grDimension.Visible = true;
                grLetterType.Visible = false;

            }
            else
            {
                grLetterType.Visible = true;
                grDimension.Visible = false;
            }

        }




    }
}
